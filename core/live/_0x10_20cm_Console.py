# -*- coding: utf-8 -*-
import sys
import os

live_path = os.path.dirname(os.path.realpath(__file__))
core_path = os.path.split(live_path)[0]
root_path = os.path.split(core_path)[0]
parent_path = os.path.split(root_path)[0]
sys.path.append(parent_path)

import time
import grequests
import pandas as pd
import midas.bin.env as env
from midas.core.data.engine import main_session
import midas.core.data.models as models

target_symbols = [
    '300836',
    '300845',
    '300839',
    '300849',
    '300927',
    '300897',
    '300930',
    '300838',
    '300929',
    '300923',
    '300899',
    '300960',
    '300886',
    '300943',
    '300972',
    '300808',
    '300668',
    '300913',
    '300907',
    '300807',
    '300851',
    '300865',
    '300947',
    '300813',
    '300564',
    '300876',
    '300971',
    '300980',
    '300781',
    '300902',
    '300988',
    '300881',
    '300906',
    '300938',
    '300749',
    '300989',
    '300789',
    '300640',
    '300926',
    '300921',
    '300978',
    '300969',
    '300967',
    '300882',
    '300949',
    '300840',
    '300975',
    '300936',
    '300885',
    '300977',
    '300956',
    '300931',
    '300819',
    '300539',
    '300553',
    '300893',
    '300928',
    '300889',
    '300920',
    '300752',
    '300818',
    '300817',
    '300970',
    '300823',
    '300895',
    '300780',
    '300843',
    '300880',
    '300963',
    '300948',
    '300700',
    '300922',
    '300846',
    '300918',
    '300917',
    '300878',
    '300354',
    '300868',
    '300879',
    '300916',
    '300901',
    '300606',
    '300615',
    '300742',
    '300665',
    '300508',
    '300932',
    '300912',
    '300933',
    '300809',
    '300890',
    '300650',
    '300952',
    '300950',
    '300270',
    '300626',
    '300946',
    '300958',
    '300990',
    '300509',
    '300942',
    '300935',
    '300909',
    '300847',
    '300985',
    '300822',
    '300852',
    '300833',
    '300826',
    '300905',
    '300778',
    '300275',
    '300837',
    '300797',
    '300915',
    '300619',
    '300756',
    '300535',
    '300743',
    '300884',
    '300842',
    '300779',
    '300883',
    '300877',
    '300611',
    '300417',
    '300478',
    '300505',
    '300939',
    '300405',
    '300863',
    '300862',
    '300796',
    '300786',
    '300864',
    '300605',
    '300925',
    '300437',
    '300828',
    '300965',
    '300820',
    '300961',
    '300986',
    '300853',
    '300461',
    '300694',
    '300898',
    '300892',
    '300584',
    '300411',
    '300389',
    '300235',
    '300594',
    '300609',
    '300870',
    '300371',
    '300940',
    '300857',
    '300903',
    '300787',
    '300824',
    '300084',
    '300283',
    '300736',
    '300812',
    '300955',
    '300688',
    '300560',
    '300875',
    '300335',
    '300126',
    '300681',
    '300654',
    '300462',
    '300713',
    '300793',
    '300306',
    '300517',
    '300514',
    '300407',
    '300858',
    '300557',
    '300753',
    '300321',
    '300092',
    '300532',
    '300873',
    '300937',
    '300165',
    '300720',
    '300254',
    '300591',
    '300210',
    '300649',
    '300856',
    '300556',
    '300670',
    '300652',
    '300612',
    '300968',
    '300025',
    '300338',
    '300900',
    '300801',
    '300716',
    '300022',
    '300703',
    '300555',
    '300426',
    '300608',
    '300528',
    '300538',
    '300501',
    '300262',
    '300356',
    '300717',
    '300491',
    '300484',
    '300540',
    '300375',
    '300089',
    '300962',
    '300987',
    '300282',
    '300163',
    '300515',
    '300250',
    '300344',
    '300330',
    '300635',
    '300827',
    '300953',
    '300710',
    '300835',
    '300062',
    '300658',
    '300911',
    '300345',
    '300621',
    '300730',
    '300141',
    '300164',
    '300707',
    '300329',
    '300549',
    '300629',
    '300445',
    '300951',
    '300706',
    '300472',
    '300545',
    '300891',
    '300908',
    '300599',
    '300076',
    '300830',
    '300449',
    '300334',
    '300220',
    '300563',
    '300805',
    '300941',
    '300469',
    '300871',
    '300499',
    '300107',
    '300771',
    '300387',
    '300810',
    '300195',
    '300112',
    '300534',
    '300799',
    '300444',
    '300855',
    '300155',
    '300583',
    '300811',
    '300295',
    '300500',
    '300867',
    '300597',
    '300404',
    '300983',
    '300467',
    '300798',
    '300074',
    '300340',
    '300562',
    '300757',
    '300150',
    '300585',
    '300466',
    '300179',
    '300644',
    '300561',
    '300533',
    '300698',
    '300139',
    '300154',
    '300351',
    '300336',
    '300097',
    '300479',
    '300765',
    '300656',
    '300592',
    '300385',
    '300746',
    '300860',
    '300669',
    '300052',
    '300175',
    '300647',
    '300622',
    '300018',
    '300246',
    '300209',
    '300610',
    '300788',
    '300887',
    '300374',
    '300718',
    '300689',
    '300218',
    '300637',
    '300645',
    '300488',
    '300519',
    '300625',
    '300106',
    '300135',
    '300503',
    '300268',
    '300249',
    '300507',
    '300399',
    '300686',
    '300380',
    '300240',
    '300643',
    '300894',
    '300603',
    '300412',
    '300494',
    '300192',
    '300281',
    '300697',
    '300452',
    '300286',
    '300419',
    '300565',
    '300648',
    '300631',
    '300721',
    '300105',
    '300169',
    '300279',
    '300513',
    '300333',
    '300473',
    '300103',
    '300745',
    '300176',
    '300447',
    '300430',
    '300421',
    '300675',
    '300719',
    '300305',
    '300976',
    '300586',
    '300172',
    '300057',
    '300004',
    '300050',
    '300140',
    '300117',
    '300589',
    '300693',
    '300288',
    '300260',
    '300772',
    '300660',
    '300690',
    '300230',
    '300543',
    '300040',
    '300152',
    '300301',
    '300013',
    '300245',
    '300403',
    '300667',
    '300148',
    '300506',
    '300095',
    '300365',
    '300490',
    '300489',
    '300214',
    '300217',
    '300320',
    '300011',
    '300785',
    '300733',
    '300241',
    '300691',
    '300049',
    '300758',
    '300086',
    '300063',
    '300067',
    '300428',
    '300353',
    '300542',
    '300350',
    '300559',
    '300791',
    '300711',
    '300343',
    '300277',
    '300600',
    '300802',
    '300289',
    '300242',
    '300732',
    '300228',
    '300727',
    '300311',
    '300247',
    '300511',
    '300512',
    '300816',
    '300402',
    '300201',
    '300424',
    '300366',
    '300521',
    '300414',
    '300157',
    '300680',
    '300030',
    '300536',
    '300231',
    '300392',
    '300081',
    '300636',
    '300434',
    '300800',
    '300042',
    '300310',
    '300651',
    '300570',
    '300861',
    '300425',
    '300577',
    '300617',
    '300252',
    '300234',
    '300692',
    '300211',
    '300314',
    '300518',
    '300276',
    '300290',
    '300678',
    '300359',
    '300576',
    '300448',
    '300043',
    '300111',
    '300480',
    '300423',
    '300410',
    '300213',
    '300265',
    '300850',
    '300790',
    '300550',
    '300422',
    '300483',
    '300869',
    '300272',
    '300173',
    '300571',
    '300021',
    '300302',
    '300299',
    '300360',
    '300120',
    '300632',
    '300198',
    '300641',
    '300435',
    '300337',
    '300440',
    '300239',
    '300504',
    '300709',
    '300723',
    '300695',
    '300161',
    '300684',
    '300485',
    '300541',
    '300493',
    '300047',
    '300575',
    '300701',
    '300237',
    '300552',
    '300065',
    '300259',
    '300007',
    '300227',
    '300486',
    '300806',
    '300129',
    '300580',
    '300522',
    '300099',
    '300300',
    '300127',
    '300292',
    '300094',
    '300160',
    '300181',
    '300100',
    '300297',
    '300548',
    '300091',
    '300429',
    '300420',
    '300578',
    '300284',
    '300569',
    '300620',
    '300673',
    '300125',
    '300520',
    '300128',
    '300453',
    '300045',
    '300199',
    '300293',
    '300191',
    '300471',
    '300436',
    '300183',
    '300590',
    '300016',
    '300137',
    '300248',
    '300739',
    '300460',
    '300200',
    '300551',
    '300910',
    '300705',
    '300291',
    '300386',
    '300130',
    '300464',
    '300683',
    '300708',
    '300331',
    '300205',
    '300349',
    '300032',
    '300019',
    '300322',
    '300109',
    '300766',
    '300194',
    '300364',
    '300317',
    '300184',
    '300384',
    '300075',
    '300324',
    '300761',
    '300077',
    '300427',
    '300381',
    '300304',
    '300039',
    '300159',
    '300332',
    '300008',
    '300196',
    '300409',
    '300400',
    '300189',
    '300442',
    '300066',
    '300187',
    '300821',
    '300256',
    '300341',
    '300010',
    '300273',
    '300174',
    '300981',
    '300497',
    '300287',
    '300729',
    '300602',
    '300266',
    '300093',
    '300397',
    '300762',
    '300342',
    '300687',
    '300263',
    '300443',
    '300261',
    '300510',
    '300328',
    '300531',
    '300121',
    '300378',
    '300177',
    '300439',
    '300020',
    '300664',
    '300829',
    '300416',
    '300815',
    '300587',
    '300526',
    '300215',
    '300468',
    '300572',
    '300393',
    '300657',
    '300190',
    '300516',
    '300258',
    '300046',
    '300455',
    '300768',
    '300255',
    '300755',
    '300080',
    '300145',
    '300523',
    '300792',
    '300147',
    '300053',
    '300624',
    '300465',
    '300355',
    '300197',
    '300607',
    '300319',
    '300776',
    '300203',
    '300061',
    '300581',
    '300663',
    '300659',
    '300048',
    '300396',
    '300475',
    '300110',
    '300741',
    '300391',
    '300377',
    '300303',
    '300170',
    '300131',
    '300238',
    '300642',
    '300566',
    '300158',
    '300388',
    '300696',
    '300919',
    '300102',
    '300193',
    '300005',
    '300078',
    '300307',
    '300267',
    '300206',
    '300031',
    '300098',
    '300041',
    '300229',
    '300525',
    '300438',
    '300232',
    '300866',
    '300593',
    '300634',
    '300219',
    '300280',
    '300055',
    '300666',
    '300382',
    '300138',
    '300441',
    '300973',
    '300006',
    '300222',
    '300318',
    '300481',
    '300368',
    '300888',
    '300352',
    '300036',
    '300715',
    '300113',
    '300134',
    '300825',
    '300406',
    '300579',
    '300492',
    '300738',
    '300208',
    '300702',
    '300470',
    '300841',
    '300180',
    '300456',
    '300401',
    '300415',
    '300803',
    '300722',
    '300035',
    '300712',
    '300979',
    '300002',
    '300082',
    '300149',
    '300432',
    '300116',
    '300769',
    '300770',
    '300233',
    '300166',
    '300735',
    '300114',
    '300085',
    '300079',
    '300398',
    '300182',
    '300674',
    '300027',
    '300596',
    '300627',
    '300068',
    '300394',
    '300457',
    '300679',
    '300487',
    '300639',
    '300151',
    '300653',
    '300358',
    '300527',
    '300224',
    '300775',
    '300133',
    '300616',
    '300119',
    '300740',
    '300567',
    '300087',
    '300185',
    '300225',
    '300598',
    '300101',
    '300573',
    '300459',
    '300638',
    '300326',
    '300132',
    '300613',
    '300748',
    '300123',
    '300188',
    '300379',
    '300323',
    '300763',
    '300348',
    '300502',
    '300451',
    '300671',
    '300034',
    '300777',
    '300346',
    '300773',
    '300236',
    '300026',
    '300390',
    '300257',
    '300315',
    '300118',
    '300633',
    '300682',
    '300783',
    '300226',
    '300662',
    '300054',
    '300143',
    '300017',
    '300072',
    '300369',
    '300474',
    '300458',
    '300726',
    '300271',
    '300339',
    '300395',
    '300296',
    '300568',
    '300672',
    '300376',
    '300024',
    '300298',
    '300957',
    '300058',
    '300737',
    '300083',
    '300747',
    '300327',
    '300212',
    '300618',
    '300724',
    '300171',
    '300294',
    '300476',
    '300832',
    '300009',
    '300070',
    '300630',
    '300168',
    '300751',
    '300244',
    '300463',
    '300418',
    '300623',
    '300685',
    '300088',
    '300373',
    '300115',
    '300073',
    '300725',
    '300136',
    '300383',
    '300482',
    '300037',
    '300001',
    '300308',
    '300363',
    '300253',
    '300676',
    '300033',
    '300357',
    '300896',
    '300146',
    '300251',
    '300699',
    '300677',
    '300999',
    '300628',
    '300285',
    '300207',
    '300144',
    '300661',
    '300558',
    '300496',
    '300529',
    '300012',
    '300316',
    '300003',
    '300759',
    '300595',
    '300408',
    '300498',
    '300413',
    '300454',
    '300450',
    '300782',
    '300601',
    '300274',
    '300347',
    '300142',
    '300433',
    '300124',
    '300122',
    '300014',
    '300760',
    '300059',
    '300015',
    '300750'
]

target_symbols = list(set(target_symbols))

def run():

    symbol2code = {}
    stock_map = {}
    for stock in main_session.query(models.DailyBasic).all():
        ts_code = stock.ts_code
        market = ts_code.split('.')[1].lower()
        symbol = ts_code.split('.')[0]
        code = '{market}{symbol}'.format(market=market, symbol=symbol)
        symbol2code[symbol] = code
        stock_map[code] = {
            'circ_mv': float(stock.circ_mv)
        }

    batch_size = 500
    req_list = []
    for i in range(0, len(target_symbols), batch_size):
        keys = []
        for symbol in target_symbols[i:i+batch_size]:
            query_key = symbol2code[symbol]
            keys.append(query_key)

        req_list.append(grequests.get('http://hq.sinajs.cn/list={}'.format(','.join(keys))))

    while True:
        time_a = time.time()
        try:
            responses = grequests.map(req_list)
            print('====== {} ======'.format(time.strftime("%Y-%m-%d %H:%M:%S", time.localtime())))
            displays = []
            for response in responses:
                res = response.text.strip().split(';\n')
                for i in res:
                    j = i.split(',')
                    name = j[0].split('="')[1]
                    code = j[0].split('="')[0].split('_')[-1]
                    yesterday_closing_price = float(j[2])
                    current_price = float(j[3])
                    today_max_price = float(j[4])
                    buy_one_price = float(j[6])
                    buy_one_vol = float(j[10])
                    today_limit_price = round(yesterday_closing_price * 1.2, 2)
                    chg = (current_price / yesterday_closing_price - 1)
                    chg_display = '{}%'.format(round(chg*100, 2))
                    circ_mv = stock_map[code]['circ_mv']

                    if_display = False
                    type = 1
                    if today_max_price == today_limit_price: #摸过板的
                        if_display = True
                        if buy_one_price < today_limit_price: #开板
                            if_display = True
                        elif buy_one_price * buy_one_vol < 10000000: #封单小于1kw
                            if_display = True
                            type = 2

                    elif chg > 0.1:
                        if_display = True

                    # if_display = True

                    if if_display:
                        if type == 2:
                            displays.append({
                                'note': '{code}\t{name}\tchg:{chg}\tprice:{price}\tcirc_mv:{circ_mv}亿\t封单:{vol}手'.format(code=code, name=name, chg=chg_display,
                                    price=round(current_price, 2), circ_mv=int(circ_mv), vol=int(buy_one_vol / 100)),
                                'chg': chg
                            })
                        else:
                            displays.append({
                                'note': '{code}\t{name}\tchg:{chg}\tprice:{price}\tcirc_mv:{circ_mv}亿'.format(code=code, name=name, chg=chg_display,
                                    price=round(current_price, 2), circ_mv=int(circ_mv)),
                                'chg': chg
                            })

            displays.sort(key=lambda x: x['chg'], reverse=False)
            notes = [i['note'] for i in displays]
            print('\n'.join(notes))
        except Exception as e:
            print(e)
            continue
        time_b = time.time()
        cost = time_b - time_a
        time.sleep(1 - cost)


if __name__ == '__main__':
    run()